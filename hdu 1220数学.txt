#include<iostream>
using namespace std;
int main()
{
	int n;
	while(cin>>n)
	cout<<(n*n*n*(n*n*n-1))/2-3*(n*n)*(n-1)<<endl;
	return 0;
}
/*
这纯粹是一道数学题目，推理如下：
 给你一个正方体，切割成单位体积的小正方体，求所有公共顶点数<=2的小正方体的对数。
公共点的数目只可能有：0,1,2,4.
很明显我们用总的对数减掉有四个公共点的对数就可以了。
 
总的公共点对数：n^3*(n^3-1)/2(一共有n^3块小方块，从中选出2块)（只有两个小方块之间才存在公共点，我们从所有的小方块中任意选出两个，自然就确定了这两个小方块的公共点的对数，从所有小方块中任意选取两个，总得选取方法数就是所有种类对数数目的总和！）
 
公共点为4的对数：一列有n-1对（n个小方块，相邻的两个为一对符合要求），一个面的共有 n^2列，底面和左面，前面三个方向相同，同理可得，故总数为：3*n^2(n-1)
所以结果为：(n^3 * (n^3-1))/2 - 3*n^2(n-1)
*/