#include<iostream>
#include <cstring>
#include <cstdio>
#include <string>
#include<queue>
using namespace std;
#define INF 99999999
#define maxn 60
int A, B, C, T, TT, sx, sy, sz;
struct Node{
    int x, y, z, t;
}s;
int mp[maxn][maxn][maxn],timE[maxn][maxn][maxn];
int d[6][3]={{0,0,-1},{0,0,1},{0,-1,0},{0,1,0},{1,0,0},{-1,0,0}}; //6ge
void BFS(Node start){
    queue<Node> Q;
    timE[0][0][0] = 0;
    Q.push(start);
    Node u;
    while(!Q.empty()){
        u = Q.front(); Q.pop();
        for(int i = 0; i < 6; i++){
            int nx=u.x+d[i][0];
            int ny=u.y+d[i][1];
            int nz=u.z+d[i][2];
            if(nx>=0 && nx <= A-1 && ny >= 0 && ny <= B-1 && nz >= 0 && nz<= C-1 && mp[nx][ny][nz]!=1){
                Node temp;
                temp.x = nx; temp.y = ny; temp.z = nz; temp.t = u.t+1;
                if(temp.t < timE[nx][ny][nz]){
                    timE[nx][ny][nz] = temp.t;
                    Q.push(temp);
                }
            }
        }
    }
}
void init(){
        scanf("%d%d%d%d",&A,&B,&C,&T);
        sx = 0; sy = 0; sz = 0;
        s.x = sx; s.y = sy; s.z = sz; s.t = 0;      
        for(int i = 0; i < A;i++){
            for(int j = 0; j < B; j++){
                for(int k = 0; k < C; k++){
                    scanf("%d",&mp[i][j][k]); timE[i][j][k] = INF;
                }           
            }   
        }
        
}
int main(){
        scanf("%d",&TT);
        while(TT--){
            init();
            BFS(s);
            if(timE[A-1][B-1][C-1]<=T) printf("%d\n",timE[A-1][B-1][C-1]);
            else printf("-1\n");
        }

      
    return 0;
}
