#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<algorithm>
using namespace std;
int s[30],ans[30];
int v[50];//使用vector超时 
int lim;
int main()
{
	int T,n;
	scanf("%d",&T); 
	while(T--)
	{
		memset(ans,0,sizeof(ans));
		scanf("%d",&n);
		int lim=0;
		for(int i=1;i<=n;i++)
		{
 	      scanf("%d",&s[i]);
		  lim+=s[i];
		}
		lim/=2;
		for(int i=1;i<(1<<n);i++)//枚举总情况个数 
		{
			int scant=1;
			int sum=0,k=1;
			int temp=i;
			while(temp)//一个一个判断 
			{
				if(temp&1)
				{
				  v[scant++]=k;
				  sum+=s[k];
				}
				temp=temp>>1;
				k++;
			}
			if(sum>lim)
			{
				for(int j=1;j<scant;j++)
				{
					if(sum-s[v[j]]<=lim)
					ans[v[j]]++; 
				} 
			}
			
		}
		printf("%d",ans[1]);
		for(int i=2;i<=n;i++)
		printf(" %d",ans[i]);
	   printf("\n");
		
	}
	return 0;
}

//////////////////////////////////////////////////////

#include<stdio.h>
#include<String.h>
int used[50],val[50],cnt[50],n;
int sum;
void DFS(int pos,int v)
{
 int i;
 if(v>sum)
 {
  for(i=1;i<=n;i++)
  {
   if(v-val[i]<=sum&&used[i]) cnt[i]++;
  }
 }
 if (pos==n) return ;
 else 
 {
  for(i=pos;i<=n;i++)//从pos上开始 防止重复 
  {
   if(!used[i])
   {
    used[i]=1;
    DFS(i,v+val[i]);
    used[i]=0;
   }
  }
 }
}
int main()
{
     int cas,i,j;
  scanf("%d",&cas);
  while(cas--)
  {
   sum=0;
   scanf("%d",&n);
   memset(used,0,sizeof(used));
   memset(cnt,0,sizeof(cnt));
           for(i=1;i<=n;i++)
     {
      scanf("%d",&val[i]);
      sum+=val[i];
     }
     sum=sum/2;
     for(i=1;i<=n;i++)
     {
      used[i]=1;
      DFS(i,val[i]);
      used[i]=0;
     }
     for(i=1;i<n;i++)
      printf("%d ",cnt[i]);
     printf("%d\n",cnt[n]);
  }
}
