（1）把每一条边删除掉然后求一次这条边顶点之间的最短距离,最短距离加上删除掉的边的权值就是环的权值,然后求出最小环值.
如果删除了这条边,两点不连通了 说明两点无法构成一个环.
m次dijkstra
（2）
Floyd求最小环
#include<iostream>
#include<cstring>
#include<cstdio>
#include<algorithm>
using namespace std;
#define INF 99999999  
int map[200][200];
int dis[200][200];
int n,m,a,b,v,ans;
void floyd()
{
	for(int k=1;k<=n;k++)
	{
		for(int i=1;i<k;i++)
		for(int j=1;j<i;j++)
		ans=min(ans,dis[i][j]+map[i][k]+map[k][j]);
		for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
		{
			if(dis[i][j]>dis[i][k]+dis[k][j])
			dis[i][j]=dis[i][k]+dis[k][j];
		}
	}
	
}
int main()
{ 
	while(cin>>n>>m)
	{
		for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
		{
			if(i==j)
			map[i][j]=dis[i][j]=0;
			else
			map[i][j]=dis[i][j]=INF;
		}
		for(int i=1;i<=m;i++)
		{
			cin>>a>>b>>v;
			if(map[a][b]>v)
			map[a][b]=map[b][a]=dis[a][b]=dis[b][a]=v;
		}
		ans=INF;
		floyd();
		if(ans>=INF)
		cout<<"It's impossible.\n";
		else
		cout<<ans<<endl;

	}
	return 0;
}


