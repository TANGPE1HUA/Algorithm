#include<iostream>
#include<stdio.h>
#include<string>
#include<string.h>
#include<algorithm>
using namespace std;
int a[200000*4];//开四倍即可 
int max1[200000*4];
int n,m,b,c,ans;
char x;
char s[20];
int build(int l,int r,int o)//l左，r右,o结点 
{
	if(l==r)//由上至下建树 
	return max1[o]=a[l];//最值建树 
	else
	{
		int mid=l+(r-l)/2;
		return max1[o]=max(build(l,mid,2*o),build(mid+1,r,2*o+1)); 
	}
	
}
void update(int l,int r,int o)//单点更新 
{
//	sum[o]+=c;
    max1[o]=max(max1[o],c);//从原来值和改变值之间取最大的 
	if(l==r)
	return;
	else
	{
	  int mid=l+(r-l)/2;
	  if(b<=mid)
	  update(l,mid,o*2);
	  else
	  update(mid+1,r,o*2+1);	
	}
}

void query(int l,int r,int o)//b，c是要求最值的区间 
{
	if(b<=l&&c>=r)//注意是b，c包含l，r 
	ans=max(ans,max1[o]);//取最大的，ans初值为0 
		//ans+=sum[o];
	else
	{
		int mid=l+(r-l)/2;
		if(b<=mid)
		query(l,mid,o*2);
	    if(c>mid)
		query(mid+1,r,2*o+1);
	} 
}

int main()
{
	while(scanf("%d%d",&n,&m))
	{
		for(int i=1;i<=n;i++)
		scanf("%d",&a[i]);
		build(1,n,1);
		for(int i=1;i<=m;i++)
		{
			getchar();
			scanf("%c",&x);
			//cout<<x<<endl;
			if(x=='Q')
			{ 
  	          scanf("%d%d",&b,&c);
  	          ans=0;
			  query(1,n,1);
			  printf("%d\n",ans);
	        } 
			if(x=='U')
			{ 
			  scanf("%d%d",&b,&c);
			  update(1,n,1);
			  } 
		}
	}
	return 0;
}


