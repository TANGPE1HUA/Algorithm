思路：贪心，只要开头有两个0，则需要判断其上一行最后有多少个连续的0，按上一行最后处0的数量由大到小排序（特殊处理一下最后一行末尾0就可以了）；
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define MAXN 10000+10
#define MAXL 100+10
int map[MAXN][MAXL];
int n,l,m,k,ans;
int _count[MAXN];//（如果当前行前2个为0)记录上一行行尾0的个数

int cmp(const int &p,const int &q){
    return p>q;
}


int main(){
    while(~scanf("%d%d%d",&n,&l,&m)){
        k=0,ans=0;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=l;j++){
                scanf("%d",&map[i][j]);
                if(!map[i][j])ans++;
            }
        }
        //除去最后一行行尾0的个数
        for(int i=l;i>=1;i--){
            if(!map[n][i])ans--;
            else break;
        }
        ans-=2*m;//除去m行开始的2个0
        for(int i=2;i<=n;i++){
            int count=0;
            if(!map[i][1]&&!map[i][2]){
                //记录上一行行尾0的个数
                for(int j=l;j>=1;j--){
                    if(!map[i-1][j])count++;
                    else break;
                }
                _count[k++]=count;
            }
        }
        sort(_count,_count+k,cmp);
        //只需m-1行就行；
        for(int i=0;i<m-1;i++){
            ans-=_count[i];
        }
        printf("%d\n",ans);
    }
    return 0;
}