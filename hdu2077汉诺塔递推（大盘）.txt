#include<iostream>
#include<string.h>
using namespace std;
long long a[70];
int main()
{
	a[1]=2;
	int T;
	cin>>T;
	while(T--)
	{
		int n;
		cin>>n;
		for(int i=2;i<=n;i++)
		a[i]=a[i-1]*3-2;
		cout<<a[n]<<endl;
	}
	return 0;
}



//如果有n个盘子，则需要前n-1个挪到中间的盘子上，然后最大的盘子挪到最右面，需要两步，把前（n-1）个盘子从左边挪到中间是和从中间挪到右边需要相同的次数。而a数组中存放的就是那个前n-1个盘子挪动到相同位置需要的次数。结果即为a[i-1]*2+2。而求a数组需要用到递推。公式为第i个为前n-1个移动次数的三倍加一，简化到两个盘子，小的先移动两次到最右边，大的移到中间，然后小的在移回中间，小的移动了三次，而大的移动了一次，就使他们全部挪动了一个位置。
