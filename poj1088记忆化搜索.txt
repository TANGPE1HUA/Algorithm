#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
using namespace std;
int map[200][200];
int num[200][200];
int dir[4][2]={{-1,0},{1,0},{0,1},{0,-1}}; 
int m,n;
int dfs(int x,int y)
{
	if(num[x][y])
	return num[x][y];
	for(int i=0;i<4;i++)
	{
		int xx=x+dir[i][0];
		int yy=y+dir[i][1];
		if(xx>=1&&xx<=m&&yy>=1&&yy<=n&&map[xx][yy]<map[x][y])
		{
			int temp=dfs(xx,yy);
			if(num[x][y]<=temp)
			{
				num[x][y]=temp+1;
			}
		}
	}
	return num[x][y];
}
int main()
{

	while(cin>>m>>n)
	{
		for(int i=1;i<=m;i++)
		for(int j=1;j<=n;j++)
		cin>>map[i][j];
		memset(num,0,sizeof(num));
		int ans=-1;
	   for(int i=1;i<=m;i++)
	   for(int j=1;j<=n;j++)
	   ans=max(ans,dfs(i,j));
	   cout<<ans+1<<endl;
	}
	return 0;
} 
