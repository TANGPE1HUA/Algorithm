http://www.cnblogs.com/AndreMouche/archive/2011/01/27/1946432.html
#include<iostream>
#include<string.h>
#include<cmath>
#include<algorithm>
using namespace std;
int n,m,k,a,b;
char c;
struct A
{
	long long matrix[200][200];
};
A aa,ans;
void init()
{
	for(int i=1;i<=n+1;i++)
    for(int j=1;j<=n+1;j++)//初始化单位矩阵 
    {
    	if(i==j)
		aa.matrix[i][j]=1;
		else
		aa.matrix[i][j]=0; 
    }
}
A mul(A x,A y)//优化 
{
  A temp;
  memset(temp.matrix,0,sizeof(temp.matrix));
  for(int i=1;i<=n+1;i++)
  for(int k=1;k<=n+1;k++) 
  if(x.matrix[i][k])
  for(int j=1;j<=n+1;j++)
 temp.matrix[i][j]+=x.matrix[i][k]*y.matrix[k][j];

  return temp;
}
 
A  quick_pow(A a,int m)
{
	A tmp;
	memset(tmp.matrix,0,sizeof(tmp.matrix));
	for(int i=1;i<=n+1;i++)
	tmp.matrix[i][i]=1;
	while(m)
	{
		if(m&1)
		tmp=mul(tmp,a);
		m=m>>1;
		a=mul(a,a);
	}
	return tmp;
	
} 
int main()
{
	while(cin>>n>>m>>k)
	{
		
		if(n==0&&m==0&&k==0)
		break;
		init();
		for(int i=1;i<=k;i++)
		{
			cin>>c;
			if(c=='g')
			{
				cin>>a;
			   aa.matrix[n+1][a]+=1;
			}
			if(c=='e')
			{
				cin>>a;
				for(int j=1;j<=n+1;j++)
				aa.matrix[j][a]=0;
			}
			if(c=='s')
			{
				cin>>a>>b;
				for(int j=1;j<=n+1;j++)
				swap(aa.matrix[j][a],aa.matrix[j][b]);
			}		
		}
		ans=quick_pow(aa,m);
		cout<<ans.matrix[n+1][1]; 
		for(int i=2;i<=n;i++)
		cout<<" "<<ans.matrix[n+1][i];
		cout<<endl;
	}
	return 0;
}
