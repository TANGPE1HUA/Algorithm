首先以poj3159为例,这个比较简单，就是给出两个点的最大差，然后让你求1到n的最大差，直接建图后用bellman或者spfa就可以过了
稍微难点的就是poj1364，因为他给出的不等式不是x-y<=k形式，有时候是大于号，这样需要我们去变形一下，并且给出的还是>,<没有等于，都要变形
再有就是poj1201，他要求出的是最长距离，那就要把形式变换成x-y>=k的标准形式
注意点:
1. 如果要求最大值想办法把每个不等式变为标准x-y<=k的形式,然后建立一条从y到x权值为k的边,变得时候注意x-y<k =>x-y<=k-1
   如果要求最小值的话,变为x-y>=k的标准形式，然后建立一条从y到x的k边，求出最长路径即可
2.如果权值为正，用dj，spfa，bellman都可以，如果为负不能用dj，并且需要判断是否有负环，有的话就不存在


1根据题意我们可以构建差分约束模型 
2但是我们要求起始点和终点距离最远 
3这里我们有两种做法： 
41、我们可以添加约束条件 即最后一个点和起始点的距离要>=n 
5我们只要二分枚举n，判断是否有负环就好 
62、我们可以只进行一次差分约束就好，这里我们要明白一个东西。就是求最短路的时候， 
7   我们求得的值是满足条件约束的最大值，求最长路的时候，我们求得的值是满足条件 
8   约束的最小值。就说最短路吧：我们可以这么想。开始的时候，我们初始化为+无穷。 
9   我们是不断减小最短路的值来看是否满足约束条件的，所以一旦满足约束条件了，我 
10   们也就不再松弛了，这样我们获得的值就是最大的符合约束的值了。最长路也可以这 
11   么思考。所以这个题目中我们把最低的点作为原点，距离关系符合x坐标轴关系。所以 
12   最终点在原点右边，我们就初始化+无穷，求最短路，得最大值。 
13   最终点在原点左边，我们就初始化-无穷，求最长路，得最小值。 
14差分约束终于有些清晰了。。心情还好。这个题算是很好解决了吧。法2在时间上是法1的 
15三分之一。以下是法2的代码 

