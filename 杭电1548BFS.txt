		 
		 
#include<iostream>
#include<string.h>
#include<queue>
using namespace std;
bool it;
int n,a,b;
int s[300];
int vis[300];
struct ele
{
	int lift;
	int step;
};
int bfs()
{
	queue<ele> q;
	ele p,temp1,temp2;
	p.lift=a;
	p.step=0;
	q.push(p);
	while(!q.empty())
	{
		ele temp=q.front();
		q.pop();
		if(temp.lift==b)
		{
			it=true;
		    return temp.step;
		}
	    temp1.lift=temp.lift+s[temp.lift];
	    if(temp1.lift>=1&&temp1.lift<=n&&vis[temp1.lift]==0)
	    {
    		temp1.step=temp.step+1;
    		vis[temp1.lift]=1;
    		q.push(temp1);
    	}
    	temp2.lift=temp.lift-s[temp.lift];
	    if(temp2.lift>=1&&temp2.lift<=n&&vis[temp2.lift]==0)
	    {
    		temp2.step=temp.step+1;
    		vis[temp2.lift]=1;
    		q.push(temp2);
    	}		
	}
}  
int main()
{
	while(cin>>n&&n)
	{
		memset(vis,0,sizeof(vis));
		cin>>a>>b;
		for(int i=1;i<=n;i++)
		cin>>s[i];
		it=false;
		vis[a]=1;
		int sum=bfs();
		if(it)
		cout<<sum<<endl;
		else
		cout<<-1<<endl;		 
	}
	return 0;
} 